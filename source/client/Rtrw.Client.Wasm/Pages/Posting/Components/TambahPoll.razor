@using Rtrw.Client.Wasm.Models
@inject IModalService ModalService
@if (Poll != null)
{
    <PollPreview Poll="Poll" OnPollDelete="OnPollDelete"></PollPreview>
}
else
{
    <div class="rtrw-flex rtrw-justify-content-start rtrw-align-items-center rtrw-gap-8px" type="button" @onclick="OpenAddNewPollModal">
        <svg id="poll_black_24dp" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
            <path id="Path_2153" data-name="Path 2153" d="M0,0H24V24H0Z" fill="none" />
            <path id="Path_2154" data-name="Path 2154" d="M19,3H5A2.006,2.006,0,0,0,3,5V19a2.006,2.006,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V5A2.006,2.006,0,0,0,19,3Zm0,16H5V5H19ZM7,10H9v7H7Zm4-3h2V17H11Zm4,6h2v4H15Z" fill="#015dd5" />
        </svg>
        <div class="rtrw-body-text">Tambah polling</div>
    </div>
}

@code {
    [Parameter] public Poll Poll { get; set; }
    async void OpenAddNewPollModal()
    {
        ModalOptions pollingModal = new()
            {
                FullScreen = false,
                CloseButton = true,
                NoHeader = false,
            };
        ModalParameters parameters = new();
        parameters.Add("Poll", new Poll());
        var modal = ModalService.Show<AddNewPollModal>("Pembuatan polling: ", parameters, pollingModal);
        var result = await modal.Result;
        if (!result.Cancelled)
        {
            Poll = (Poll?)result.Data;
            StateHasChanged();
        }
    }
    void OnPollDelete()
    {
        Poll = null;
    }
}