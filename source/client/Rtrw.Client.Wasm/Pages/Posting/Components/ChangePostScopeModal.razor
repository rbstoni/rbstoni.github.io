@using Rtrw.Client.Wasm.Components.Enums
@using Rtrw.Client.Wasm.Components.Extensions
@using Rtrw.Client.Wasm.Models

<RtrwModal Class="rtrw-flex rtrw-flex-column rtrw-gap-row-8px">
    <ModalContent>
        <div class="rtrw-flex rtrw-justify-content-between rtrw-align-items-center rtrw-gap-4px">
            <img src="media/scope/Semua_Warga.png" width="97" height="94" />
            <div class="scope-info" style="margin-right: auto">
                <div class="scope-name">@Audience.SemuaWarga.Name</div>
                <div class="scope-desc">@Audience.SemuaWarga.Description</div>
            </div>
            <RtrwButton Type=ButtonType.Button
                        Variant=Variant.Filled
                        Style="border-radius: 13px"
                        Color="@(Scope==Scope.SemuaWarga ? ThemeColor.Primary:ThemeColor.Secondary)"
                        OnClick="@(()=>ChangeScopeHandler(Scope.SemuaWarga))">
                Pilih
            </RtrwButton>
        </div>

        <div class="rtrw-flex rtrw-justify-content-between rtrw-align-items-center rtrw-gap-4px">
            <img src="media/scope/Warga_Sekitar.png" width="97" height="94" />
            <div class="scope-info" style="margin-right: auto">
                <div class="scope-name">@Audience.WargaSekitar.Name</div>
                <div class="scope-desc">@Audience.WargaSekitar.Description</div>
            </div>
            <RtrwButton Type=ButtonType.Button
                        Variant=Variant.Filled
                        Style="border-radius: 13px"
                        Color="@(Scope==Scope.WargaSekitar ? ThemeColor.Primary:ThemeColor.Secondary)"
                        OnClick="@(()=>ChangeScopeHandler(Scope.WargaSekitar))">
                Pilih
            </RtrwButton>
        </div>
    </ModalContent>
</RtrwModal>

@code {
    [CascadingParameter] public RtrwModalInstance? RtrwModalInstance { get; set; }
    [Parameter] public Scope Scope { get; set; }

    void ChangeScopeHandler(Scope scope)
    {
        Scope = scope;
        RtrwModalInstance?.Close(ModalResult.Ok(Scope));
    }
}