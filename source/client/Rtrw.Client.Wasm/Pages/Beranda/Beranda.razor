@page "/home"
@using Rtrw.Client.Wasm.Components.Enums
@using Rtrw.Client.Wasm.Features.Post.Components
@using Rtrw.Client.Wasm.Components
@using Rtrw.Client.Wasm.Models
@using Rtrw.Client.Wasm.Services
@inject ICurrentUser CurrentUser
@inject IPostService PostService

<RtrwAppBar Position="sticky-top">
    <EndBarContent>
        <AvatarWarga AvatarUrl="@currentUser?.AvatarUrl" Size="40" />
    </EndBarContent>
</RtrwAppBar>
<RtrwMainContent Style="gap: 4px">
    @if (Posts != null && Posts.Count != 0)
    {
        <Virtualize Items="Posts" Context="post">
            <ItemContent>
                <RtrwPostItem PostId="@post.Id" @key="@post.Id" />
            </ItemContent>
            <Placeholder>
                <RtrwSpinner Color="ThemeColor.Primary" Size="40px" Indeterminate />
            </Placeholder>
        </Virtualize>
    }
</RtrwMainContent>
<RtrwFooter>
    <RtrwNavBar />
</RtrwFooter>

@code {
    List<Post>? Posts { get; set; }
    Warga? currentUser;

    protected override async void OnInitialized()
    {
        currentUser = CurrentUser.Warga;
        var results = (await PostService.GetPostsAsync()).OrderBy(x => x.CreatedAt).ToList();
        if (results != null && results.Count() != 0)
        {
            Posts = results;
        }
        StateHasChanged();
    }
}