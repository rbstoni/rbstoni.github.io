@using Rtrw.Client.Wasm.Components.Enums
@using Rtrw.Client.Wasm.Features.HtmlCode
@using Rtrw.Client.Wasm.Utilities
<div @attributes="Attributes" class="@ClassName" style="@StyleName">
    <span class="text-firstname">@FullName</span>
    @if (Verified)
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
            <g id="Group_1547" data-name="Group 1547" transform="translate(-2.95 -3.04)">
                <path id="Path_3308" data-name="Path 3308" d="M11.95,3.81l1.88-.77,1.41,1.47,2.03.07.68,1.92,1.84.89-.15,2.04,1.31,1.56-.96,1.8.57,1.96L18.95,16l-.27,2.03-1.98.48-1.07,1.74-2-.37-1.68,1.16-1.68-1.16-2,.37L7.2,18.51l-1.98-.48L4.95,16,3.34,14.75l.57-1.96-.96-1.8L4.27,9.43,4.11,7.39,5.95,6.5l.68-1.92,2.03-.07,1.41-1.47Z" fill="#19b14b" />
                <path id="Path_3309" data-name="Path 3309" d="M15.35,8.86l-2.8,2.5-1.33,1.19-.73.66-.37.32-.12.11c-.13.13-.16.15-.06,0l.49-.13h-.09l.49.13c.13.08-.18-.17-.19-.18l-.24-.23-.63-.62L8.55,11.45c-.89-.87-2.27.5-1.37,1.38.73.71,1.46,1.44,2.2,2.14a1.29,1.29,0,0,0,1.58.38,8.25,8.25,0,0,0,1.15-1l4.61-4.12a1,1,0,0,0-1.37-1.38Z" fill="#fff" />
            </g>
        </svg>
    }
    @HtmlCode.Bullet
    <span class="text-kelurahan">@Kelurahan</span>
</div>

@code {
    [Parameter] public Dictionary<string, object>? Attributes { get; set; }
    [Parameter] public string? Class { get; set; }
    [Parameter] public string? Style { get; set; }
    [Parameter] public string? Kelurahan { get; set; }
    [Parameter] public string? FullName { get; set; }
    [Parameter] public bool Verified { get; set; }

    protected string ClassName
        => new CssBuilder("namebar")
            .AddClass(Class)
            .Build();

    protected string StyleName
        => new StyleBuilder()
            .AddStyle(Style)
            .Build();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && FullName.Length > 150)
        {
            FullName = SplitLongString(FullName);
            Console.WriteLine("Masuk OnAfterRender");
            StateHasChanged();
        }
    }

    protected override void OnParametersSet()
    {
        if (FullName.Length > 150)
        {
            FullName = SplitLongString(FullName);
            Console.WriteLine("Masuk OnParametersSet");
            StateHasChanged();
        }
    }

    string SplitLongString(string text)
    {
        char[] delimiterChars = { ' ', ',', '.', ':', '\t' };
        string[] words = text!.Split(delimiterChars, StringSplitOptions.RemoveEmptyEntries);

        return words[0];
    }
}