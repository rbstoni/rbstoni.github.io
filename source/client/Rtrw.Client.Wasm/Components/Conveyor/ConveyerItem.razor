@namespace Rtrw.Client.Wasm.Components

@if (Parent?.CurrentItem == this)
{
    <div @attributes="@Attributes" class="conveyer-item" style="@ConveyerItemStyle">
        @ChildContent
        @if (!string.IsNullOrWhiteSpace(ImageUrl))
        {
            <img src="@ImageUrl" class="rtrw-flex rtrw-width-100 rtrw-height-100" style="@ImageStyle" />
        }
        else if (ChildContent == null && !string.IsNullOrWhiteSpace(MinHeight))
        {
            <div style="@EmptyConveyerItemStyle"></div>
        }
    </div>
}

@code {
    [CascadingParameter] RtrwConveyer? Parent { get; set; }
    [Parameter] public Dictionary<string, object> Attributes { get; set; } = new();
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string ImageUrl { get; set; } = string.Empty;
    [Parameter] public string MinHeight { get; set; } = string.Empty;
    [Parameter] public ObjectFit ObjectFit { get; set; } = ObjectFit.Contain;
    [Parameter] public ObjectPosition ObjectPosition { get; set; } = ObjectPosition.Center;
    [Parameter] public string BorderRadius { get; set; } = "8px";
    [Parameter] public string Height { get; set; } = "250px";
    protected string ImageStyle
        => new StyleBuilder()
            .AddStyle("object-fit", ObjectFit.EnumToDescriptionString())
            .AddStyle("object-position", ObjectPosition.EnumToDescriptionString())
            .AddStyle("border-radius", BorderRadius, !string.IsNullOrWhiteSpace(BorderRadius))
            .Build();
    protected string ConveyerItemStyle
        => new StyleBuilder()
            .AddStyle("height", Height)
            .Build();
    protected string EmptyConveyerItemStyle
        => new StyleBuilder()
            .AddStyle("height", MinHeight)
            .Build();
    protected override void OnInitialized()
    {
        Parent?.AddItem(this);
    }
}