@namespace Rtrw.Client.Wasm.Components.Input
@inherits RtrwComponentBase

<div @attributes="UserAttributes" class="@Classname" style="@Style">
    <div class="rtrw-input-control-input-container">
        @InputContent
        @if (!String.IsNullOrEmpty(Label))
        {
            <RtrwInputLabel Class="rtrw-input-label-input-control"
                        Variant="@Variant"
                        Disabled=@Disabled
                        Error="@Error"
                        ForId="@ForId">
                @Label
            </RtrwInputLabel>
        }
    </div>
    @if (Error || !String.IsNullOrEmpty(HelperText) || !String.IsNullOrEmpty(CounterText))
    {
        <div class="@HelperContainer">
            <p class="@HelperClass">
                <div class="rtrw-flex">
                    @if (Error)
                    {
                        <div class="rtrw-margin-end-auto" id="@ErrorId">
                            @ErrorText
                        </div>
                    }
                    else if (!String.IsNullOrEmpty(HelperText))
                    {
                        <div class="rtrw-margin-end-auto">
                            @HelperText
                        </div>
                    }
                    @if (!String.IsNullOrEmpty(CounterText))
                    {
                        <div class="rtrw-margin-start-auto">
                            @CounterText
                        </div>
                    }
                </div>
            </p>
        </div>
    }
    @ChildContent
</div>

@code {
    protected string Classname
        => new CssBuilder("rtrw-input-control")
            .AddClass("rtrw-input-required", when: () => Required)
            .AddClass($"rtrw-input-control-margin-{Margin.EnumToDescriptionString()}", when: () => Margin != Margin.None)
            .AddClass("rtrw-input-control-full-width", FullWidth)
            .AddClass("rtrw-input-error", Error)
            .AddClass(Class)
            .Build();

    protected string HelperContainer
        => new CssBuilder("rtrw-input-control-helper-container")
            .AddClass($"rtrw-padding-x-4px", Variant == Variant.Filled)
            .AddClass($"rtrw-padding-x-8px", Variant == Variant.Outlined)
            .Build();

    protected string HelperClass
        => new CssBuilder("rtrw-input-helper-text")
            .AddClass("rtrw-input-helper-onfocus", HelperTextOnFocus)
            .AddClass("rtrw-input-error", Error)
            .Build();

    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? InputContent { get; set; }
    [Parameter] public bool Required { get; set; }
    [Parameter] public bool Error { get; set; }
    [Parameter] public string? ErrorText { get; set; }
    [Parameter] public string? ErrorId { get; set; }
    [Parameter] public string? HelperText { get; set; }
    [Parameter] public bool HelperTextOnFocus { get; set; }
    [Parameter] public string? CounterText { get; set; }
    [Parameter] public bool FullWidth { get; set; }
    [Parameter] public Margin Margin { get; set; } = Margin.None;
    [Parameter] public string? Label { get; set; }
    [Parameter] public Variant Variant { get; set; } = Variant.Text;
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string ForId { get; set; } = string.Empty;
}