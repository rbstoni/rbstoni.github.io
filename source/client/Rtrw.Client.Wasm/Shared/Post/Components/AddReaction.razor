@using Rtrw.Client.Wasm.Enums
@*@using RtRw.Client.UI.Shared.Components.Icons.Post;*@
@inject ICurrentUser CurrentUser
@inject IPostService PostService

<RtrwButton OnClick="ToggleReactionList" Class="reaction-popover-anchor-origin">
    @if (!currentUserHasReacted)
    {
        <RtrwSvgAddRection />
    }
    @if (currentUserHasReacted)
    {
        <span style="color:var(--rtrw-primary)">@currentUserEmoji.EnumToDescriptionString()</span>
    }
    @if (showReactionList)
    {
        <div class="reaction-popover-wrapper show">
            <div class="reaction-popover-container">

                <div class="reaction-popover-item" type="button" @onclick="@(async ()=>await AddNewReaction(Emoji.TerimaKasih))">
                    <div class="reaction-popover-icon">
                        <RtrwSvgTerimaKasih />
                        @*<RtRw.Client.UI.Shared.Components.Icons.Reaction.TerimaKasihSvg/>*@
                    </div>
                    <div class="reaction-popover-label">Terima Kasih</div>
                </div>

                <div class="reaction-popover-item" type="button" @onclick="@(()=>AddNewReaction(Emoji.Suka))">
                    <div class=" reaction-popover-icon">
                        <RtrwSvgSuka />
                        @*<RtRw.Client.UI.Shared.Components.Icons.Reaction.SukaSvg/>*@
                    </div>
                    <div class="reaction-popover-label">Suka</div>
                </div>
                <div class="reaction-popover-item" type="button" @onclick="@(()=>AddNewReaction(Emoji.Kaget))">
                    <div class="reaction-popover-icon">
                        <RtrwSvgKaget />
                        @*<RtRw.Client.UI.Shared.Components.Icons.Reaction.KagetSvg/>*@
                    </div>
                    <div class="reaction-popover-label">Kaget</div>
                </div>
                <div class="reaction-popover-item" type="button" @onclick="@(()=>AddNewReaction(Emoji.TidakSuka))">
                    <div class="reaction-popover-icon">
                        <RtrwSvgTidakSuka />
                        @*<RtRw.Client.UI.Shared.Components.Icons.Reaction.TidakSukaSvg/>*@
                    </div>
                    <div class="reaction-popover-label">Tidak Suka</div>
                </div>
                <div class="reaction-popover-item" type="button" @onclick="@(()=>AddNewReaction(Emoji.Setuju))">
                    <div class="reaction-popover-icon">
                        <RtrwSvgSetuju />
                        @*<RtRw.Client.UI.Shared.Components.Icons.Reaction.SetujuSvg />*@
                    </div>
                    <div class="reaction-popover-label">Setuju</div>
                </div>
            </div>
        </div>
    }
</RtrwButton>
<RtrwOverlay LightBackground OnClick="OnOverlayClick" />

@code {
    bool showReactionList;
    bool currentUserHasReacted;
    Emoji currentUserEmoji;

    [Parameter] public EventCallback<Emoji> NewReaction { get; set; } = new();
    [Parameter] public EventCallback RemoveReaction { get; set; }

    async Task AddNewReaction(Emoji emoji)
    {
        currentUserHasReacted = true;
        currentUserEmoji = emoji;
        await NewReaction.InvokeAsync(emoji);
    }

    async Task RemoveCurrentReaction()
    {
        currentUserHasReacted = false;
        await RemoveReaction.InvokeAsync();
    }

    void ToggleReactionList()
    {
        if (currentUserHasReacted)
        {
            RemoveReaction.InvokeAsync();
        }
        else
        {
            showReactionList = !showReactionList;
        }
    }

    void OnOverlayClick()
    {
        showReactionList = false;
    }
}